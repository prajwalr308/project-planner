{"version":3,"sources":["components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/Navbar.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signin.js","components/auth/signup.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","serviceWorker.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","toString","calendar","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","path","exact","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","Boolean","window","location","hostname","AuthIsLoaded","children","useSelector","isLoaded","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"4OAsBeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCDV,SAACA,EAAUE,EAAX,IACYC,EAD2B,EAAjBA,eAGlBC,OAAOH,UAAUI,MAAK,WAC7BL,EAAS,CAAEM,KAAM,8BDCRP,EAjBO,SAACQ,GACrB,OACE,6BACE,wBAAIC,UAAU,SACd,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACR,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAAmCD,EAAMI,QAAQC,gBEGlEC,EAXQ,WACrB,OACE,6BACE,wBAAIL,UAAU,SACd,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACF,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCqBGV,eAVQ,SAACe,GAGtB,OAFAC,QAAQC,IAAIF,GAEN,CACJV,KAAKU,EAAMG,SAASb,KACpBO,QAAQG,EAAMG,SAASN,WAKZZ,EAvBA,SAACQ,GAAW,IAClBH,EAAeG,EAAfH,KAAKO,EAAUJ,EAAVI,QACZI,QAAQC,IAAIZ,GACZ,IAAMc,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,gBACDU,O,iDCCQE,EAZQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACvB,OACE,yBAAKb,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,eAAea,EAAQC,OAC7C,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAGhB,UAAU,aAAaiB,IAAOJ,EAAQK,UAAUC,SAASC,YAAYC,eCY3DC,EAjBK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,yBAAKvB,UAAU,wBACXuB,GAAYA,EAASC,KAAI,SAAAX,GACzB,OACE,kBAAC,IAAD,CAAMZ,GAAI,YAAcY,EAAQY,GAAKC,IAAKb,EAAQY,IAClD,kBAAC,EAAD,CAAgBZ,QAASA,U,gBCF7Bc,E,uKACM,IAAD,EACmBC,KAAK7B,MAAvBwB,EADD,EACCA,SACR,OAFO,EACU3B,KACRe,IAGP,yBAAKX,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAauB,SAAUA,KAEzB,yBAAKvB,UAAU,2BARA,kBAAC,IAAD,CAAUC,GAAG,gB,GAHd4B,aA8BxBC,cACEvC,aAVsB,SAACe,GAEvB,MAAO,CACLiB,SAAUjB,EAAMyB,UAAUC,QAAQT,SAClC3B,KAAMU,EAAMG,SAASb,SAOzBqC,2BAAiB,CAAC,CAChBC,WAAW,cAHbJ,CAKEH,GCQaG,cACbvC,aAboB,SAACe,EAAM6B,GAC3B5B,QAAQC,IAAIF,GAEZ,IAAMmB,EAAKU,EAASC,MAAMC,OAAOZ,GAC3BF,EAAWjB,EAAMyB,UAAUO,KAAKf,SAEtC,MAAM,CACJV,QAFcU,EAAWA,EAASE,GAAM,KAGxC7B,KAAKU,EAAMG,SAASb,SAMtBqC,2BAAiB,CAAC,CAChBC,WAAW,cAHAJ,EA5CQ,SAAC/B,GAAW,IACzBc,EAAiBd,EAAjBc,QACR,OADyBd,EAATH,KACPe,IAELE,EAEA,yBAAKb,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAca,EAAQC,OACtC,2BAAID,EAAQ0B,UAEd,yBAAKvC,UAAU,wCACb,0CAAgBa,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMC,IAAOJ,EAAQK,UAAUC,SAASC,YAAYC,eAO1D,yBAAKrB,UAAU,oBACb,kDApBe,kBAAC,IAAD,CAAUC,GAAG,e,QCJ9BuC,E,4MACJlC,MAAQ,CACNmC,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKlD,MAAMmD,OAAO,EAAK5C,Q,uDAEf,IAAD,EACoBsB,KAAK7B,MAAxBoD,EADD,EACCA,UACR,OAFO,EACWvD,KACVe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE/B,yBAAKD,UAAU,aACb,0BAAMA,UAAU,QAAQoD,SAAUxB,KAAKoB,cACrC,wBAAIhD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOqD,QAAQ,SAAf,SACA,2BAAOvD,KAAK,QAAQ2B,GAAG,QAAQ6B,SAAU1B,KAAKe,gBAEhD,yBAAK3C,UAAU,eACb,2BAAOqD,QAAQ,YAAf,YACA,2BAAOvD,KAAK,WAAW2B,GAAG,WAAW6B,SAAU1B,KAAKe,gBAEtD,yBAAK3C,UAAU,eACb,4BAAQA,UAAU,gCAAlB,UAEF,yBAAKA,UAAU,mBACTmD,EAAY,2BAAIA,GAAiB,Y,GAjC5BtB,aAsDNtC,eAbS,SAACe,GACvB,MAAM,CACJ6C,UAAW7C,EAAMV,KAAKuD,UACtBvD,KAAKU,EAAMG,SAASb,SAIG,SAACJ,GAC1B,MAAO,CACL0D,OAAQ,SAACK,GAAD,OAAW/D,GPvDAgE,EOuDgBD,EPtD5B,SAAC/D,EAAUE,EAAX,IACYC,EAD2B,EAAjBA,eAGlBC,OAAO6D,2BACdD,EAAYf,MACZe,EAAYd,UACZ7C,MAAK,WACLL,EAAS,CAAEM,KAAM,qBAChB4D,OAAM,SAACC,GACRnE,EAAS,CAAEM,KAAM,cAAe6D,cAVlB,IAACH,MO2DRjE,CAA6CiD,GCtDtDoB,E,4MACJtD,MAAQ,CACNmC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAEZnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACH,EAAKlD,MAAMgE,OAAO,EAAKzD,Q,uDAEd,IAAD,EACoBsB,KAAK7B,MAAxBoD,EADD,EACCA,UACR,OAFO,EACWvD,KACVe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE/B,yBAAKD,UAAU,aACb,0BAAMA,UAAU,QAAQoD,SAAUxB,KAAKoB,cACrC,wBAAIhD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOqD,QAAQ,SAAf,SACA,2BAAOvD,KAAK,QAAQ2B,GAAG,QAAQ6B,SAAU1B,KAAKe,gBAEhD,yBAAK3C,UAAU,eACb,2BAAOqD,QAAQ,YAAf,YACA,2BAAOvD,KAAK,WAAW2B,GAAG,WAAW6B,SAAU1B,KAAKe,gBAEtD,yBAAK3C,UAAU,eACb,2BAAOqD,QAAQ,aAAf,cACA,2BAAOvD,KAAK,OAAO2B,GAAG,YAAY6B,SAAU1B,KAAKe,gBAEnD,yBAAK3C,UAAU,eACb,2BAAOqD,QAAQ,YAAf,aACA,2BAAOvD,KAAK,OAAO2B,GAAG,WAAW6B,SAAU1B,KAAKe,gBAElD,yBAAK3C,UAAU,eACb,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACXmD,EAAY,2BAAIA,GAAiB,a,GA1C5BtB,aA8DNtC,eAZS,SAACe,GACvB,MAAM,CACJ6C,UAAW7C,EAAMV,KAAKuD,UACtBvD,KAAKU,EAAMG,SAASb,SAGE,SAACJ,GACzB,MAAO,CACLuE,OAAO,SAACC,GAAD,OAAWxE,ERrCA,SAAAwE,GACpB,OAAO,SAACxE,EAASE,EAAV,GAAkD,IAA9BC,EAA6B,EAA7BA,YAAYsE,EAAiB,EAAjBA,aAC/BxD,EAAWd,IACXoC,EAAYkC,IAClBxD,EAASb,OAAOsE,+BACdF,EAAQvB,MACRuB,EAAQtB,UACR7C,MAAK,SAACsE,GACJ,OAAOpC,EAAUG,WAAW,SAASkC,IAAID,EAAIE,KAAK1D,KAAK2D,IAAI,CACzDT,UAAUG,EAAQH,UAClBC,SAASE,EAAQF,SACjB1D,SAAU4D,EAAQH,UAAU,GAAGG,EAAQF,SAAS,QAEnDjE,MAAK,WACNL,EAAS,CAACM,KAAK,sBACd4D,OAAM,SAAAC,GACPnE,EAAS,CAACM,KAAK,eAAe6D,YQqBLI,CAAOC,QAIvBzE,CAA4CqE,G,QC9DrDW,E,4MACJjE,MAAQ,CACNQ,MAAO,GACPyB,QAAS,I,EAEXI,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKlD,MAAMyE,cAAc,EAAKlE,OAC9B,EAAKP,MAAM0E,QAAQC,KAAK,M,uDAIxB,OADe9C,KAAK7B,MAAbH,KACEe,IAEP,yBAAKX,UAAU,aACb,0BAAMA,UAAU,QAAQoD,SAAUxB,KAAKoB,cACrC,wBAAIhD,UAAU,2BAAd,wBACA,yBAAKA,UAAU,eACb,2BAAOF,KAAK,OAAO2B,GAAG,QAAQ6B,SAAU1B,KAAKe,eAC7C,2BAAOU,QAAQ,SAAf,kBAEF,yBAAKrD,UAAU,eACb,8BAAUyB,GAAG,UAAUzB,UAAU,uBAAuBsD,SAAU1B,KAAKe,eACvE,2BAAOU,QAAQ,WAAf,oBAEF,yBAAKrD,UAAU,eACb,4BAAQA,UAAU,sBAAlB,aAda,kBAAC,IAAD,CAAUC,GAAG,gB,GAjBV4B,aAmDbtC,eAbS,SAACe,GACvB,MAAM,CACJV,KAAKU,EAAMG,SAASb,SAKG,SAAAJ,GACzB,MAAO,CACLgF,cAAe,SAAC3D,GAAD,OAAarB,ECpDH,SAACqB,GAC1B,OAAO,SAACrB,EAAUE,EAAX,GAAmD,EAA9BC,YAA+B,IAEnDoC,GAAYkC,EAFsC,EAAlBA,gBAGhC9D,EAAUT,IAAWe,SAASN,QAC9BwE,EAAWjF,IAAWe,SAASb,KAAKe,IAC1CoB,EAAUG,WAAW,YAAY0C,IAAjC,2BAEK/D,GAFL,IAGEE,gBAAiBZ,EAAQ0D,UACzB7C,eAAgBb,EAAQ2D,SACxBa,SAAUA,EACVzD,UAAW,IAAI2D,QACdhF,MAAK,WACNL,EAAS,CAAEM,KAAM,8BAChB4D,OAAM,SAAAC,GACPnE,EAAS,CAAEM,KAAM,wBAA0B6D,ODoCVa,CAAc3D,QAIxCtB,CAA6CgF,GE7B7CO,MAlBf,WACE,OACE,kBAAC,IAAD,KACK,yBAAK9E,UAAU,OACf,kBAAC,EAAD,MACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO+E,KAAK,IAAIC,OAAK,EAACC,UAAWtD,IACjC,kBAAC,IAAD,CAAOoD,KAAK,eAAeE,UAAWC,IACtC,kBAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWzC,IAC/B,kBAAC,IAAD,CAAOuC,KAAK,UAAUE,UAAWrB,IACjC,kBAAC,IAAD,CAAOmB,KAAK,UAAUE,UAAWV,QCnBvCY,EAAY,CAChBhC,UAAW,MAoCEiC,EAjCK,WAAgC,IAA/B9E,EAA8B,uDAAtB6E,EAAWE,EAAW,uCACjD,OAAOA,EAAOvF,MACZ,IAAK,cAEH,OADAS,QAAQC,IAAI,eACL,2BACFF,GADL,IAEE6C,UAAW,iBAEf,IAAK,gBAEH,OADA5C,QAAQC,IAAI,iBACL,CACL2C,UAAW,MAEb,IAAK,kBAEH,OADA5C,QAAQC,IAAI,mBACLF,EACT,IAAK,iBAEH,OADAC,QAAQC,IAAK,kBACb,2BACKF,GADL,IAEE6C,UAAUkC,EAAO1B,IAAI2B,UAEzB,IAAK,eAEH,OADA/E,QAAQC,IAAI,gBACZ,2BACKF,GADL,IAEE6C,UAAUkC,EAAO1B,IAAI2B,UAE3B,QACE,OAAOhF,ICjCP6E,EAAY,CACd5D,SAAU,CACN,CAACE,GAAI,IAAKX,MAAO,qBAAsByB,QAAS,kBAChD,CAACd,GAAI,IAAKX,MAAO,wBAAyByB,QAAS,kBACnD,CAACd,GAAI,IAAKX,MAAO,sBAAuByB,QAAS,oBAkB1CgD,EAbQ,WAAgC,IAA/BjF,EAA8B,uDAAtB6E,EAAWE,EAAW,uCACpD,OAAOA,EAAOvF,MACZ,IAAK,yBAEH,OADAS,QAAQC,IAAI,0BACLF,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,wBACLF,EACT,QACE,OAAOA,I,QCLEkF,EAPKC,YAAgB,CAClC7F,KAAMwF,EACNvE,QAAS0E,EACTxD,UAAU2D,mBACVjF,SAASkF,oB,wCCQTlF,IAASmF,cAdU,CACjBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,eACfC,YAAa,QACbC,wBAAwB,IAM1B7F,IAASsB,YAEMtB,QAAf,ECVkB8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStE,MACvB,2DCDN,SAASuE,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBhH,EAAOiH,aAAY,SAAAvG,GAAK,OAAIA,EAAMG,SAASb,QACjD,OAAKkH,mBAASlH,GACPgH,EADqB,iDAI9B,IAAMG,EAAQC,YAAYxB,EAAY1D,YAClCmF,YAAgBC,IAAMC,kBAAkB,CAACxH,0BAAasE,+BAEtDmD,yBAAe3G,IAAS4G,GACxBb,OAAOc,8BAAgCd,OAAOc,iCAM1CC,EAAW,CACf9G,aAEA+G,OAPgB,CAChBnB,YAAa,QACbC,wBAAwB,GAKNe,WAElB7H,SAAUuH,EAAMvH,SAChBiI,mBAAmB,EACnBC,mDAIFC,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GACb,kBAAC,6BAA+BQ,EAE5B,kBAACZ,EAAD,KACI,kBAAC,EAAD,SAICkB,SAASC,eAAe,SD8EnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpI,MAAK,SAAAqI,GACJA,EAAaC,gBAEdzE,OAAM,SAAA0E,GACL7H,QAAQ6H,MAAMA,EAAM9C,c","file":"static/js/main.912adc82.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n  <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  \r\n}\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = newUser =>{\r\n  return (dispatch,getState,{getFirebase,getFirestore })=>{\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res)=>{\r\n        return firestore.collection('users').doc(res.user.uid).set({\r\n          firstName:newUser.firstName,\r\n          lastName:newUser.lastName,\r\n          initials: newUser.firstName[0]+newUser.lastName[0]\r\n        })\r\n    }).then(()=>{\r\n      dispatch({type:'SIGNUP_SUCCESS'})\r\n    }).catch(err=>{\r\n      dispatch({type:'SIGNUP_ERROR',err})\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './signedInLinks';\r\nimport SignedOutLinks from './signedOutLinks';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const {auth,profile}= props;\r\n  console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Project Plan</Link>\r\n      {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nconst mapStateToProps =(state)=>{\r\n  console.log(state);\r\n\r\n  return{\r\n    auth:state.firebase.auth,\r\n    profile:state.firebase.profile\r\n\r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n  <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n  <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './projectSummary'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id } key={project.id}> \r\n          <ProjectSummary project={project}  />\r\n          </Link>\r\n          \r\n        )\r\n      })}  \r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/projectList'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects,auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth :state.firebase.auth,\r\n  }\r\n}\r\n\r\nexport default \r\ncompose( \r\n  connect(mapStateToProps),\r\nfirestoreConnect([{\r\n  collection:'projects'\r\n}])\r\n)(Dashboard)\r\n\r\n// import React from 'react'\r\n// import ProjectList from '../projects/projectList'\r\n// import Notifications from './notification'\r\n// import { connect,useSelector } from 'react-redux'\r\n\r\n// function Dashboard(props) {\r\n//   console.log(props)\r\n//     const project = useSelector(state => state.project.projects)\r\n//     return(\r\n//     <div className=\"dashboard container\">\r\n//         <div className=\"row\">{}\r\n//           <div className=\"col s12 m6\">\r\n//             <ProjectList />\r\n//           </div>\r\n//           <div className=\"col s12 m5 offset-m1\">\r\n//             <Notifications />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// export default Dashboard","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const  {project,auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n \r\n \r\n}\r\n\r\n\r\nconst mapStateToProps=(state,ownProps)=>{\r\n  console.log(state);\r\n \r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return{\r\n    project: project,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection:'projects'\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError,auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { authError,auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n  return {\r\n    signUp:(newUser)=>dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState,{getFirebase,getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n       \r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n      });\r\n    }\r\n  };","import React from 'react';\nimport { BrowserRouter, Switch,Route } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/projects/projectDetails';\nimport SignIn from './components/auth/signin';\nimport SignUp from './components/auth/signup';\nimport CreateProject from './components/projects/createProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n         <div className=\"App\">\n         <Navbar />\n          <Switch>\n          <Route path='/' exact component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n      </div>\n    </BrowserRouter>\n   \n  );\n}\n\nexport default App;\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        authError: null\r\n      }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n      case 'SIGNUP_SUCCESS':\r\n        console.log ('signup success'); \r\n        return{\r\n          ...state,\r\n          authError:action.err.message,\r\n        } \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return{\r\n          ...state,\r\n          authError:action.err.message\r\n        }    \r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n    \r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport {  firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore:firestoreReducer,\r\n  firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDWKsx_2EInZX3E2m5wzmGezIeqyvBJRKY\",\r\n    authDomain: \"projectmanager-e2855.firebaseapp.com\",\r\n    databaseURL: \"https://projectmanager-e2855.firebaseio.com\",\r\n    projectId: \"projectmanager-e2855\",\r\n    storageBucket: \"projectmanager-e2855.appspot.com\",\r\n    messagingSenderId: \"921572202077\",\r\n    appId: \"1:921572202077:web:277fd431372b4f1af59fb4\",\r\n    measurementId: \"G-L7RE2Y4XNK\",\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true \r\n   \r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  firebase.firestore();\r\n  \r\n  export default firebase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport {  ReactReduxFirebaseProvider,reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbconfig'\nimport firebase from 'firebase/app'\nimport * as serviceWorker from './serviceWorker';\nimport { useSelector } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children\n}\n\nconst store = createStore(rootReducer,compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n   \n    reduxFirestore(firebase,fbConfig), // redux bindings for firestore\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ));\n  const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\n  const rrfProps = {\n    firebase,\n   \n    config: rrfConfig,fbConfig,\n    \n    dispatch: store.dispatch,\n    attachAuthIsReady: true,\n    createFirestoreInstance\n  };\n  \n\n  ReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n        \n            <AuthIsLoaded>\n                <App />\n\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n  "],"sourceRoot":""}